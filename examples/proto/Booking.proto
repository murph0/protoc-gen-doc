/**
 * Booking related messages.
 *
 * This file is really just an example. The data model is completely
 * fictional.
 *
 * Author: Elvis Stansvik
 */
package com.example;

/**
 * Represents the status of a vehicle booking.
 */
message BookingStatus {
    required int32 id = 1;           /// Unique booking status ID.
    required string description = 2; /// Booking status description. E.g. "Active".
}

/**
 * Represents the booking of a vehicle.
 *
 * Vehicles are some cool shit. But drive carefully!
 */
message Booking {
    required int32 vehicle_id = 1;     /// ID of booked vehicle.
    required int32 customer_id = 2;    /// Customer that booked the vehicle.
    required BookingStatus status = 3; /// Status of the booking.

    /** Has booking confirmation been sent? */
    required bool confirmation_sent = 4;

    /** Has payment been received? */
    required bool payment_received = 5;
}

/**
 * Service for handling vehicle bookings.
 */
service BookingService {
    /// Used to book a vehicle. Pass in a Booking and a BookingStatus will be returned.
    rpc BookVehicle (Booking) returns (BookingStatus);
}
